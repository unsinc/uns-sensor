- name: Prep for the docker environment
  apt:
    name:
      - ca-certificates
      - gnupg

- name: Update the APT repository
  apt:
    update_cache: yes
  changed_when: False

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    state: present
    filename: docker

- name: Initial Sensor Configuration
  apt:
    name:  
      - auditd
      - htop
      - nano
      - psmisc
      - net-tools
      - containerd.io
      - docker-buildx-plugin
      - docker-ce
      - docker-ce-cli
      - docker-compose-plugin
      - apt-transport-https
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
      - gnupg-agent
      - autoconf
      - dpkg-dev
      - file
      - g++
      - gcc
      - libc-dev
      - make
      - pkg-config
      - re2c
      - wget

- name: Install Docker module for Python
  pip:
    name: docker 

- name: Upgrade all packages used by the sensor
  apt: upgrade=dist force_apt_get=yes

- name: Collect the highest 5 interface names on the sensor
  shell: "ansible localhost -m setup -a filter=ansible_interfaces | sort | grep -e ens -e enp | tail -5 | sed 's/ //g' | sed 's/\"//g' | sed 's/,//g' > /home/uns/span_interfaces.txt"

- name: Set all monitoring interfaces to optional
  shell: "netplan set ethernets.{{ item }}.optional=true"
  loop: "{{ lookup('file', '/home/uns/span_interfaces.txt').splitlines() }}"

- name: Copy the docker-compose file to the Docker directory
  copy:
    src: ~/.ansible/pull/{{ansible_hostname}}/configuration/docker-compose.yml
    dest: /Docker

- name: Chnage docker-copose permissions
  file:
    path: /Docker/docker-compose.yml 
    mode: 0755

- name: Create the needed span interfaces
  shell: "docker network create -d macvlan -o macvlan_mode=passthru -o parent={{ item }} {{ item }}_span"
  loop: "{{ lookup('file', '/home/uns/span_interfaces.txt').splitlines() }}"
  ignore_errors: true

- name: Install the IDS container with Docker Compose 
  shell: "docker compose -f /Docker/docker-compose.yml up -d"

- name: Attach the new SPAN interfaces to the IDS
  shell: "docker network connect {{ item }}_span IDS"
  loop: "{{ lookup('file', '/home/uns/span_interfaces.txt').splitlines() }}"