- name: Prep for the docker environment
  apt:
    name:
      - ca-certificates
      - gnupg

- name: Update the APT repository
  apt:
    update_cache: yes
    force_apt_get: yes
  changed_when: False

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    state: present
    filename: docker

- name: Initial Sensor Configuration
  apt:
    name:  
      - auditd
      - htop
      - nano
      - psmisc
      - net-tools
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
#      - apt-transport-https
#      - software-properties-common
#      - python3-pip
#      - virtualenv
#      - python3-setuptools
#      - gnupg-agent
#      - autoconf
#      - dpkg-dev
#      - file
#      - g++
#      - gcc
#      - libc-dev
#      - make
#      - pkg-config
#      - re2c
#      - wget

#- name: Install Docker module for Python
#  pip:
#    name: docker

#- name: Install Docker Compose module for Python
#  pip:
#    name: docker_compose

- name: Upgrade all packages used by the sensor
  apt: upgrade=dist force_apt_get=yes

- name: Collect the highest 5 interface names on the sensor
  shell: "ansible localhost -m setup -a filter=ansible_interfaces | sort | grep -e ens -e enp | tail -5 | sed 's/ //g' | sed 's/\"//g' | sed 's/,//g' > /home/uns/span_interfaces.txt"

- name: Set all monitoring interfaces to optional
  shell: "netplan set ethernets.{{ item }}.optional=true"
  loop: "{{ lookup('file', '/home/uns/span_interfaces.txt').splitlines() }}"

- name: Create Docker directory if it does not exist
  file:
    path: /Docker 
    state: directory
    owner: docker
    group: docker

- name: Create Suricata Log directory if it does not exist
  file:
    path: /var/log/suricata 
    state: directory
    owner: docker
    group: docker

- name: Copy the docker-compose file to the Docker directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/docker-compose.yml
    dest: /Docker/docker-compose.yml

- name: Create Suricata directory if it does not exist
  file:
    path: /Docker/IDS/suricata 
    state: directory
    owner: docker
    group: docker

- name: Create Suricata eth1 Rules directory if it does not exist
  file:
    path: /Docker/IDS/suricata/eth1/rules 
    state: directory
    owner: docker
    group: docker

- name: Create Suricata eth2 Rules directory if it does not exist
  file:
    path: /Docker/IDS/suricata/eth2/rules 
    state: directory
    owner: docker
    group: docker

- name: Create Suricata eth3 Rules directory if it does not exist
  file:
    path: /Docker/IDS/suricata/eth3/rules 
    state: directory
    owner: docker
    group: docker

- name: Create Suricata eth4 Rules directory if it does not exist
  file:
    path: /Docker/IDS/suricata/eth4/rules 
    state: directory
    owner: docker
    group: docker

- name: Create Suricata eth5 Rules directory if it does not exist
  file:
    path: /Docker/IDS/suricata/eth5/rules 
    state: directory
    owner: docker
    group: docker

- name: Copy the Dockerfile
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/dockerfile
    dest: /Docker/dockerfile

- name: Copy the Suricata Configuration file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/suricata.yaml
    dest: /Docker/IDS/suricata/suricata.yaml 

- name: Copy the Suricata eth1 Configuration file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/eth1.yaml
    dest: /Docker/IDS/suricata/eth1/eth1.yaml

- name: Copy the Suricata eth2 Configuration file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/eth2.yaml
    dest: /Docker/IDS/suricata/eth2/eth2.yaml

- name: Copy the Suricata eth3 Configuration file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/eth3.yaml
    dest: /Docker/IDS/suricata/eth3/eth3.yaml

- name: Copy the Suricata eth4 Configuration file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/eth4.yaml
    dest: /Docker/IDS/suricata/eth4/eth4.yaml

- name: Copy the Suricata eth5 Configuration file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/eth5.yaml
    dest: /Docker/IDS/suricata/eth5/eth5.yaml

- name: Copy the Suricata eth1 classification file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/classification.config
    dest: /Docker/IDS/suricata/eth1/classification.config

- name: Copy the Suricata eth2 classification file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/classification.config
    dest: /Docker/IDS/suricata/eth2/classification.config

- name: Copy the Suricata eth3 classification file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/classification.config
    dest: /Docker/IDS/suricata/eth3/classification.config

- name: Copy the Suricata eth4 classification file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/classification.config
    dest: /Docker/IDS/suricata/eth4/classification.config

- name: Copy the Suricata eth5 classification file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/classification.config
    dest: /Docker/IDS/suricata/eth5/classification.config

- name: Copy the Suricata eth1 reference file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/reference.config
    dest: /Docker/IDS/suricata/eth1/reference.config

- name: Copy the Suricata eth2 reference file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/reference.config
    dest: /Docker/IDS/suricata/eth2/reference.config

- name: Copy the Suricata eth3 reference file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/reference.config
    dest: /Docker/IDS/suricata/eth3/reference.config

- name: Copy the Suricata eth4 reference file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/reference.config
    dest: /Docker/IDS/suricata/eth4/reference.config

- name: Copy the Suricata eth5 reference file to the Suricata directory
  copy:
    src: ~/.ansible/pull/{{ansible_nodename}}/configuration/reference.config
    dest: /Docker/IDS/suricata/eth5/reference.config

- name: Create the needed span interfaces
  shell: "docker network create -d macvlan -o macvlan_mode=passthru -o parent={{ item }} {{ item }}_span"
  loop: "{{ lookup('file', '/home/uns/span_interfaces.txt').splitlines() }}"
  ignore_errors: true

- name: Run the docker container
  shell: 
    cmd: |
        docker compose up -d 

- name: Attach the new SPAN interfaces to the IDS
  shell: "docker network connect {{ item }}_span IDS"
  loop: "{{ lookup('file', '/home/uns/span_interfaces.txt').splitlines() }}"